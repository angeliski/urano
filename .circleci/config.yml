version: 2
jobs:
  build:
    docker:
      - image: circleci/golang:1.14
    working_directory: /go/src/github.com/angeliski/urano

    environment:
      TEST_RESULTS: /tmp/test-results
    steps:
      - run:
          name: install linter
          command: go get -u golang.org/x/lint/golint    
      - checkout
      - run:
          name: Setup git fetching with SSH
          command: |
            git config --global url."ssh://git@github.com/".insteadOf "https://github.com/"

      - run:
          name: Setup Code Climate test-reporter
          command: |
            wget https://codeclimate.com/downloads/test-reporter/test-reporter-latest-linux-amd64
            mv test-reporter-latest-linux-amd64 cc-test-reporter
            chmod +x ./cc-test-reporter
      - run: mkdir -p $TEST_RESULTS
      - run:
          name: "Enforce Go Formatted Code"
          command: "! go fmt ./... 2>&1 | read"
      - run:
          name: Run vet
          command: make vet  | tee  ${TEST_RESULTS}/go-vet.out
      - run:
          name: Run lint
          command: make lint | tee  ${TEST_RESULTS}/go-lint.out
      - run:
          name: Run unit and integration tests
          command: |
            ./cc-test-reporter before-build
            make test
            ./cc-test-reporter after-build --coverage-input-type gocov --exit-code $?

      - run: go tool cover -html=c.out -o ${TEST_RESULTS}/coverage_profile.html
      - store_artifacts:
          path: ${TEST_RESULTS}
          destination: raw-test-output